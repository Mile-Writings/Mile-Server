name: CD

on:
  pull_request:
    branches: [ "develop" ]

jobs:
  deploy-ci:
    runs-on: ubuntu-22.04
    env:
      working-directory: .

    
    steps: 
    - name: 체크아웃
      uses: actions/checkout@v3

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        distribution: 'corretto'
        java-version: '17'

    - name: application.yaml 생성
      run: | 
          mkdir ./module-api/src/main/resources
          cd ./module-api/src/main/resources
          echo "${{ secrets.PROD_APPLICATION }}" > ./application-deploy.yml
      working-directory: ${{ env.working-directory }}

    - name: 빌드
      run: |
          chmod +x gradlew
          ./gradlew build -x test
      working-directory: ${{ env.working-directory }}
      shell: bash


    - name: docker build 환경 설정
      uses: docker/setup-buildx-action@v2.9.1
      
    - name: login docker hub
      uses: docker/login-action@v2.2.0
      with:
        username: ${{ secrets.DOCKER_USER }}
        password: ${{ secrets.DOCKER_SECRET }}

    - name: docker image 빌드 및 푸시
      run: |
        docker build --platform linux/amd64 -t mile1217/mile-server .
        docker push mile1217/mile-server
      working-directory: ${{ env.working-directory }}

  deploy-cd:      
    needs: deploy-ci
    runs-on: ubuntu-20.04

    steps:    
    - name: 도커 컨테이너 실행
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.PROD_SERVER_IP }}
        username: ${{ secrets.PROD_SERVER_USER }}
        key: ${{ secrets.PROD_SERVER_KEY }}
        script: |
          cd ~
          ./deploy.sh
